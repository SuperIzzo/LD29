<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shark</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>DynamicBody</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>Blood</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//var orientation = point_direction(0,0, phy_linear_velocity_x, phy_linear_velocity_y );

if( phy_linear_velocity_x &lt;0 )
{
    image_xscale = -1;
}
else
{
    image_xscale = 1;
}

phy_rotation = 0;


var fishID = floor( random(instance_number(TinyFish)) );
var fish = instance_find( TinyFish , fishID );

var dist = point_distance( x, y, fish.x, fish.y );

if dist&gt;0 then 
begin

    var xDir = (fish.x-x)/dist;
    var yDir = (fish.y-y)/dist;
    var strength = max(1000 - dist,0) * 0.001;
    
    //var fish = instance_nearest( x,y, Fish );
    phy_linear_velocity_x += xDir * strength;
    phy_linear_velocity_y += yDir * strength;
    
    if dist&lt;32 then
    begin
        phy_linear_velocity_x -= xDir * strength*6;
        phy_linear_velocity_y -= yDir * strength*3;    
    end
    
end
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.300000011920929</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,12</point>
    <point>28,12</point>
    <point>28,20</point>
    <point>0,20</point>
  </PhysicsShapePoints>
</object>
